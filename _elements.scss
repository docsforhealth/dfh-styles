.button-container {
    & &__button {
        width: 100%;
    }
    &__button + &__button {
        margin-top: $baseunit * 0.5;
    }

    @media (min-width: $media-width-landscape-small-mobile) {
        // ensure that buttons stay on same line
        display: flex;

        & &__button {
            width: auto;
        }
        &__button + &__button {
            margin-top: 0;
            margin-left: $baseunit * 0.5;
        }
        &--expand-width &__button {
            width: 100%;
        }
    }
}

.list {
    padding-left: $baseunit * 2;

    &--unstyled {
        @include scut-list-unstyled; // resets left padding too
    }
    &--hanging-indent {
        $indent-size: $baseunit * 2;

        // manually style instead of using `scut-list-unstyled` to preserve vertical spacing
        list-style-type: none;
        padding-left: 0;

        & > li {
            @include scut-hanging-indent($indent-size);

            margin-bottom: $baseunit * 0.5;
        }
    }
}

.tag {
    @include scut-truncate;

    display: inline-block;
    margin-right: $baseunit * 0.2;
    padding: ($baseunit * 0.1) ($baseunit * 0.5) ($baseunit * 0.15);
    color: $color-gray;
    border: 1px solid $color-seafoam-dark-2;
    border-radius: $border-radius;

    // use margin-right instead of margin-left for consistent left spacing when tags wrap
    &:last-of-type {
        margin-right: 0;
    }

    &--notable {
        border-color: $color-navy-light-1;
        background-color: $color-navy-light-2;
    }
}

.ajax-loader-none {
    @extend .container;
    @extend .container--narrow;
    @extend .text;
    @extend .text--light;

    text-align: center;
    padding-top: $baseunit * 2;
}

.detail-container {
    padding-top: $unit-vertical-spacing-small;

    @media (min-width: $media-width-laptop) {
        padding: $unit-vertical-spacing-small 0
            ($unit-vertical-spacing-small * 2);
    }
    @media (min-width: $media-width-desktop) {
        padding: ($baseunit * 2) 0;
    }
}
